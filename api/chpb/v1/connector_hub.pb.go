// API Models and Documentation.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: chpb/v1/connector_hub.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PostgresClazz represents a possible type of value that can be represented by a string.
type PostgresClazz int32

const (
	PostgresClazz_POSTGRES_CLAZZ_UNSPECIFIED PostgresClazz = 0
	// A null value is represented by the empty string
	PostgresClazz_POSTGRES_CLAZZ_NULL PostgresClazz = 1
	// A boolean value is represented by either "true" or "false", with case sensitivity
	PostgresClazz_POSTGRES_CLAZZ_BOOLEAN PostgresClazz = 2
	// An integral value is represented by whatever strconv.FormatInt(v, 64) outputs or strconv.ParseInt(s, 64) inputs
	PostgresClazz_POSTGRES_CLAZZ_INTEGRAL PostgresClazz = 3
	// A floating-point value is represented by whatever strconv.FormatFloat(v, 'g', -1, 64) outputs or strconv.ParseFloat(s, 64) inputs
	PostgresClazz_POSTGRES_CLAZZ_FLOATING_POINT PostgresClazz = 4
	// A text value is represented by its 1:1 string.
	PostgresClazz_POSTGRES_CLAZZ_TEXT PostgresClazz = 5
	// A blob value is represented by its hexadecimal encoding; i.e., whatever hex.EncodeToString(v) outputs or hex.DecodeString(s) inputs
	PostgresClazz_POSTGRES_CLAZZ_BLOB PostgresClazz = 6
)

// Enum value maps for PostgresClazz.
var (
	PostgresClazz_name = map[int32]string{
		0: "POSTGRES_CLAZZ_UNSPECIFIED",
		1: "POSTGRES_CLAZZ_NULL",
		2: "POSTGRES_CLAZZ_BOOLEAN",
		3: "POSTGRES_CLAZZ_INTEGRAL",
		4: "POSTGRES_CLAZZ_FLOATING_POINT",
		5: "POSTGRES_CLAZZ_TEXT",
		6: "POSTGRES_CLAZZ_BLOB",
	}
	PostgresClazz_value = map[string]int32{
		"POSTGRES_CLAZZ_UNSPECIFIED":    0,
		"POSTGRES_CLAZZ_NULL":           1,
		"POSTGRES_CLAZZ_BOOLEAN":        2,
		"POSTGRES_CLAZZ_INTEGRAL":       3,
		"POSTGRES_CLAZZ_FLOATING_POINT": 4,
		"POSTGRES_CLAZZ_TEXT":           5,
		"POSTGRES_CLAZZ_BLOB":           6,
	}
)

func (x PostgresClazz) Enum() *PostgresClazz {
	p := new(PostgresClazz)
	*p = x
	return p
}

func (x PostgresClazz) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresClazz) Descriptor() protoreflect.EnumDescriptor {
	return file_chpb_v1_connector_hub_proto_enumTypes[0].Descriptor()
}

func (PostgresClazz) Type() protoreflect.EnumType {
	return &file_chpb_v1_connector_hub_proto_enumTypes[0]
}

func (x PostgresClazz) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresClazz.Descriptor instead.
func (PostgresClazz) EnumDescriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{0}
}

// PostgresValue represents a single value obtained from or destined to a table in a database managed by PostgreSQL.
type PostgresValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clazz          PostgresClazz `protobuf:"varint,1,opt,name=clazz,proto3,enum=chpb.v1.PostgresClazz" json:"clazz,omitempty"` // Clazz of the value that indicates how to interpret the representation
	Representation string        `protobuf:"bytes,2,opt,name=representation,proto3" json:"representation,omitempty"`           // String representation of the value
}

func (x *PostgresValue) Reset() {
	*x = PostgresValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostgresValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresValue) ProtoMessage() {}

func (x *PostgresValue) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresValue.ProtoReflect.Descriptor instead.
func (*PostgresValue) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{0}
}

func (x *PostgresValue) GetClazz() PostgresClazz {
	if x != nil {
		return x.Clazz
	}
	return PostgresClazz_POSTGRES_CLAZZ_UNSPECIFIED
}

func (x *PostgresValue) GetRepresentation() string {
	if x != nil {
		return x.Representation
	}
	return ""
}

// PostgresRow represents a single row obtained from a table in a database managed by PostgreSQL.
type PostgresRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PostgresValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // Values of the row.
}

func (x *PostgresRow) Reset() {
	*x = PostgresRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostgresRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresRow) ProtoMessage() {}

func (x *PostgresRow) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresRow.ProtoReflect.Descriptor instead.
func (*PostgresRow) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{1}
}

func (x *PostgresRow) GetValues() []*PostgresValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// PostgresError represents an error that may have originated in PostgreSQL, in the lib/pq driver, or in the connector.
// If the error was not a PostgreSQL originated error, error_code will be "CONNR".
type PostgresError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    string `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`          // PostgreSQL specific error code
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Detailed error message
}

func (x *PostgresError) Reset() {
	*x = PostgresError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostgresError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresError) ProtoMessage() {}

func (x *PostgresError) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresError.ProtoReflect.Descriptor instead.
func (*PostgresError) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{2}
}

func (x *PostgresError) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *PostgresError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// PostgresRequest represents a request to make a PostgreSQL query.
type PostgresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     string            `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`                                                                                               // The SQL query to be executed
	Arguments []*PostgresValue  `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`                                                                                       // Arguments for parameterized queries
	Metadata  map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional metadata
}

func (x *PostgresRequest) Reset() {
	*x = PostgresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostgresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresRequest) ProtoMessage() {}

func (x *PostgresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresRequest.ProtoReflect.Descriptor instead.
func (*PostgresRequest) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{3}
}

func (x *PostgresRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PostgresRequest) GetArguments() []*PostgresValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *PostgresRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// PostgresResponse represents a response to a PostgreSQL query.
type PostgresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnNames []string          `protobuf:"bytes,1,rep,name=column_names,json=columnNames,proto3" json:"column_names,omitempty"`                                                                // Column names
	Rows        []*PostgresRow    `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`                                                                                                 // The rows returned by the query
	Error       *PostgresError    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`                                                                                               // Postgres specific error message
	Metadata    map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional metadata
}

func (x *PostgresResponse) Reset() {
	*x = PostgresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostgresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresResponse) ProtoMessage() {}

func (x *PostgresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresResponse.ProtoReflect.Descriptor instead.
func (*PostgresResponse) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{4}
}

func (x *PostgresResponse) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

func (x *PostgresResponse) GetRows() []*PostgresRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *PostgresResponse) GetError() *PostgresError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PostgresResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type EmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body      string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *EmailRequest) Reset() {
	*x = EmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRequest) ProtoMessage() {}

func (x *EmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRequest.ProtoReflect.Descriptor instead.
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{5}
}

func (x *EmailRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *EmailRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EmailRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type EmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmailResponse) Reset() {
	*x = EmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailResponse) ProtoMessage() {}

func (x *EmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailResponse.ProtoReflect.Descriptor instead.
func (*EmailResponse) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{6}
}

type CamundaStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Variables string `protobuf:"bytes,2,opt,name=variables,proto3" json:"variables,omitempty"` // hex-encoded JSON
}

func (x *CamundaStartRequest) Reset() {
	*x = CamundaStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamundaStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamundaStartRequest) ProtoMessage() {}

func (x *CamundaStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamundaStartRequest.ProtoReflect.Descriptor instead.
func (*CamundaStartRequest) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{7}
}

func (x *CamundaStartRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *CamundaStartRequest) GetVariables() string {
	if x != nil {
		return x.Variables
	}
	return ""
}

type CamundaStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success            bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Diagnostic         string `protobuf:"bytes,2,opt,name=diagnostic,proto3" json:"diagnostic,omitempty"`
	ProcessInstanceKey int64  `protobuf:"varint,3,opt,name=process_instance_key,json=processInstanceKey,proto3" json:"process_instance_key,omitempty"`
}

func (x *CamundaStartResponse) Reset() {
	*x = CamundaStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamundaStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamundaStartResponse) ProtoMessage() {}

func (x *CamundaStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamundaStartResponse.ProtoReflect.Descriptor instead.
func (*CamundaStartResponse) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{8}
}

func (x *CamundaStartResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CamundaStartResponse) GetDiagnostic() string {
	if x != nil {
		return x.Diagnostic
	}
	return ""
}

func (x *CamundaStartResponse) GetProcessInstanceKey() int64 {
	if x != nil {
		return x.ProcessInstanceKey
	}
	return 0
}

type CamundaInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessInstanceKey int64  `protobuf:"varint,1,opt,name=process_instance_key,json=processInstanceKey,proto3" json:"process_instance_key,omitempty"`
	WaitForState       string `protobuf:"bytes,2,opt,name=wait_for_state,json=waitForState,proto3" json:"wait_for_state,omitempty"`
}

func (x *CamundaInspectRequest) Reset() {
	*x = CamundaInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamundaInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamundaInspectRequest) ProtoMessage() {}

func (x *CamundaInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamundaInspectRequest.ProtoReflect.Descriptor instead.
func (*CamundaInspectRequest) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{9}
}

func (x *CamundaInspectRequest) GetProcessInstanceKey() int64 {
	if x != nil {
		return x.ProcessInstanceKey
	}
	return 0
}

func (x *CamundaInspectRequest) GetWaitForState() string {
	if x != nil {
		return x.WaitForState
	}
	return ""
}

type CamundaInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Diagnostic string `protobuf:"bytes,2,opt,name=diagnostic,proto3" json:"diagnostic,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` // hex-encoded JSON, or "" if not found
}

func (x *CamundaInspectResponse) Reset() {
	*x = CamundaInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamundaInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamundaInspectResponse) ProtoMessage() {}

func (x *CamundaInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamundaInspectResponse.ProtoReflect.Descriptor instead.
func (*CamundaInspectResponse) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{10}
}

func (x *CamundaInspectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CamundaInspectResponse) GetDiagnostic() string {
	if x != nil {
		return x.Diagnostic
	}
	return ""
}

func (x *CamundaInspectResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId               string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ConnectorPostgres       *PostgresRequest       `protobuf:"bytes,2,opt,name=connector_postgres,json=connectorPostgres,proto3" json:"connector_postgres,omitempty"`
	ConnectorEmail          *EmailRequest          `protobuf:"bytes,3,opt,name=connector_email,json=connectorEmail,proto3" json:"connector_email,omitempty"`
	ConnectorCamundaStart   *CamundaStartRequest   `protobuf:"bytes,4,opt,name=connector_camunda_start,json=connectorCamundaStart,proto3" json:"connector_camunda_start,omitempty"`
	ConnectorCamundaInspect *CamundaInspectRequest `protobuf:"bytes,5,opt,name=connector_camunda_inspect,json=connectorCamundaInspect,proto3" json:"connector_camunda_inspect,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chpb_v1_connector_hub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_chpb_v1_connector_hub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_chpb_v1_connector_hub_proto_rawDescGZIP(), []int{11}
}

func (x *Event) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Event) GetConnectorPostgres() *PostgresRequest {
	if x != nil {
		return x.ConnectorPostgres
	}
	return nil
}

func (x *Event) GetConnectorEmail() *EmailRequest {
	if x != nil {
		return x.ConnectorEmail
	}
	return nil
}

func (x *Event) GetConnectorCamundaStart() *CamundaStartRequest {
	if x != nil {
		return x.ConnectorCamundaStart
	}
	return nil
}

func (x *Event) GetConnectorCamundaInspect() *CamundaInspectRequest {
	if x != nil {
		return x.ConnectorCamundaInspect
	}
	return nil
}

var File_chpb_v1_connector_hub_proto protoreflect.FileDescriptor

var file_chpb_v1_connector_hub_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x68, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63,
	0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x22, 0x65, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x7a, 0x7a,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43, 0x6c, 0x61, 0x7a, 0x7a, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x7a, 0x7a, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x0d,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8f, 0x02, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x6f, 0x77, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x0f, 0x0a, 0x0d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a,
	0x13, 0x43, 0x61, 0x6d, 0x75, 0x6e, 0x64, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x6d, 0x75, 0x6e, 0x64, 0x61, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6f, 0x0a, 0x15, 0x43, 0x61, 0x6d, 0x75, 0x6e, 0x64,
	0x61, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6c, 0x0a, 0x16, 0x43, 0x61, 0x6d, 0x75, 0x6e,
	0x64, 0x61, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x54, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x75, 0x6e, 0x64, 0x61, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x75, 0x6e, 0x64, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x61, 0x6d, 0x75, 0x6e, 0x64, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x5a, 0x0a,
	0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x75, 0x6e,
	0x64, 0x61, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x75, 0x6e,
	0x64, 0x61, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x6d, 0x75, 0x6e,
	0x64, 0x61, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2a, 0xd6, 0x01, 0x0a, 0x0d, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43, 0x6c, 0x61, 0x7a, 0x7a, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41, 0x5a, 0x5a, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50,
	0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41, 0x5a, 0x5a, 0x5f, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53,
	0x5f, 0x43, 0x4c, 0x41, 0x5a, 0x5a, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41,
	0x5a, 0x5a, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x21, 0x0a,
	0x1d, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41, 0x5a, 0x5a, 0x5f,
	0x46, 0x4c, 0x4f, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41,
	0x5a, 0x5a, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x53,
	0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x41, 0x5a, 0x5a, 0x5f, 0x42, 0x4c, 0x4f, 0x42,
	0x10, 0x06, 0x42, 0x8b, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x42, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x75, 0x62,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x74, 0x68, 0x65, 0x72, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68,
	0x70, 0x62, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x43, 0x68,
	0x70, 0x62, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x07, 0x43, 0x68, 0x70, 0x62, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x13, 0x43, 0x68, 0x70, 0x62, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x43, 0x68, 0x70, 0x62, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chpb_v1_connector_hub_proto_rawDescOnce sync.Once
	file_chpb_v1_connector_hub_proto_rawDescData = file_chpb_v1_connector_hub_proto_rawDesc
)

func file_chpb_v1_connector_hub_proto_rawDescGZIP() []byte {
	file_chpb_v1_connector_hub_proto_rawDescOnce.Do(func() {
		file_chpb_v1_connector_hub_proto_rawDescData = protoimpl.X.CompressGZIP(file_chpb_v1_connector_hub_proto_rawDescData)
	})
	return file_chpb_v1_connector_hub_proto_rawDescData
}

var file_chpb_v1_connector_hub_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chpb_v1_connector_hub_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_chpb_v1_connector_hub_proto_goTypes = []any{
	(PostgresClazz)(0),             // 0: chpb.v1.PostgresClazz
	(*PostgresValue)(nil),          // 1: chpb.v1.PostgresValue
	(*PostgresRow)(nil),            // 2: chpb.v1.PostgresRow
	(*PostgresError)(nil),          // 3: chpb.v1.PostgresError
	(*PostgresRequest)(nil),        // 4: chpb.v1.PostgresRequest
	(*PostgresResponse)(nil),       // 5: chpb.v1.PostgresResponse
	(*EmailRequest)(nil),           // 6: chpb.v1.EmailRequest
	(*EmailResponse)(nil),          // 7: chpb.v1.EmailResponse
	(*CamundaStartRequest)(nil),    // 8: chpb.v1.CamundaStartRequest
	(*CamundaStartResponse)(nil),   // 9: chpb.v1.CamundaStartResponse
	(*CamundaInspectRequest)(nil),  // 10: chpb.v1.CamundaInspectRequest
	(*CamundaInspectResponse)(nil), // 11: chpb.v1.CamundaInspectResponse
	(*Event)(nil),                  // 12: chpb.v1.Event
	nil,                            // 13: chpb.v1.PostgresRequest.MetadataEntry
	nil,                            // 14: chpb.v1.PostgresResponse.MetadataEntry
}
var file_chpb_v1_connector_hub_proto_depIdxs = []int32{
	0,  // 0: chpb.v1.PostgresValue.clazz:type_name -> chpb.v1.PostgresClazz
	1,  // 1: chpb.v1.PostgresRow.values:type_name -> chpb.v1.PostgresValue
	1,  // 2: chpb.v1.PostgresRequest.arguments:type_name -> chpb.v1.PostgresValue
	13, // 3: chpb.v1.PostgresRequest.metadata:type_name -> chpb.v1.PostgresRequest.MetadataEntry
	2,  // 4: chpb.v1.PostgresResponse.rows:type_name -> chpb.v1.PostgresRow
	3,  // 5: chpb.v1.PostgresResponse.error:type_name -> chpb.v1.PostgresError
	14, // 6: chpb.v1.PostgresResponse.metadata:type_name -> chpb.v1.PostgresResponse.MetadataEntry
	4,  // 7: chpb.v1.Event.connector_postgres:type_name -> chpb.v1.PostgresRequest
	6,  // 8: chpb.v1.Event.connector_email:type_name -> chpb.v1.EmailRequest
	8,  // 9: chpb.v1.Event.connector_camunda_start:type_name -> chpb.v1.CamundaStartRequest
	10, // 10: chpb.v1.Event.connector_camunda_inspect:type_name -> chpb.v1.CamundaInspectRequest
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_chpb_v1_connector_hub_proto_init() }
func file_chpb_v1_connector_hub_proto_init() {
	if File_chpb_v1_connector_hub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chpb_v1_connector_hub_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PostgresValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PostgresRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PostgresError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PostgresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PostgresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CamundaStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CamundaStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CamundaInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CamundaInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chpb_v1_connector_hub_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chpb_v1_connector_hub_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chpb_v1_connector_hub_proto_goTypes,
		DependencyIndexes: file_chpb_v1_connector_hub_proto_depIdxs,
		EnumInfos:         file_chpb_v1_connector_hub_proto_enumTypes,
		MessageInfos:      file_chpb_v1_connector_hub_proto_msgTypes,
	}.Build()
	File_chpb_v1_connector_hub_proto = out.File
	file_chpb_v1_connector_hub_proto_rawDesc = nil
	file_chpb_v1_connector_hub_proto_goTypes = nil
	file_chpb_v1_connector_hub_proto_depIdxs = nil
}
