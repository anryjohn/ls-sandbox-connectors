{
	"info": {
		"_postman_id": "df819c25-3d1e-46ff-9b3d-9122dcd4b748",
		"name": "MartinTestSuite-AUTOGENERATED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"event": [
				{
					"id": "b4620a15-4d34-45bb-a34e-4cfc7c815a65",
					"listen": "test",
					"script": {
						"exec": [
							"// AUTO-GENERATED. DO NOT MODIFY!",
							"(function() {",
							"    \"use strict\";",
							"    ",
							"    var id = pm.response.headers ? pm.response.headers.get(\"X-Request-ID\") : undefined;",
							"    console.log(\"X-Request-ID: \" + id);",
							"    ",
							"})();",
							""
						],
						"id": "a6d65e48-811c-4665-8a26-1b66eb5a2073",
						"type": "text/javascript"
					}
				}
			],
			"item": [
				{
					"event": [
						{
							"id": "640cc01d-4af7-4e20-96e0-39cbb414e575",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"error\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "8d8a28ed-41e6-465d-9f05-237c4fa3a7b9",
								"type": "text/javascript"
							}
						}
					],
					"id": "7975cae7-6cd6-4d3c-ab19-73c6068c4384",
					"name": "trigger postgres1",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"kind\": \"postgres1\"\n}\n"
						},
						"header": [
							{
								"id": "5d9e3650-46e4-4bb1-8439-552dd4934aea",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"test-trigger"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/test-trigger"
						}
					}
				},
				{
					"event": [
						{
							"id": "49984974-827f-4081-b039-89592ff5977a",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"error\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "55cbcb2c-c4a7-4d43-98fa-611d3c6e55b4",
								"type": "text/javascript"
							}
						}
					],
					"id": "31e876e6-b3be-4cfa-a4ae-b3e1de4b9442",
					"name": "trigger email1",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"kind\": \"email1\"\n}\n"
						},
						"header": [
							{
								"id": "61e3c5ca-be74-40f3-a1cc-7e6779e7352f",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"test-trigger"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/test-trigger"
						}
					}
				},
				{
					"event": [
						{
							"id": "2df16ec1-13b2-4c77-b362-913c39701155",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"error\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "f2af0e74-c11d-4664-a440-72d4477da260",
								"type": "text/javascript"
							}
						}
					],
					"id": "d8f4afae-286c-42f1-bd6a-579f21d1220b",
					"name": "trigger email2",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"kind\": \"email2\"\n}\n"
						},
						"header": [
							{
								"id": "4a122f16-1548-4db0-a981-31fc30275072",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"test-trigger"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/test-trigger"
						}
					}
				},
				{
					"event": [
						{
							"id": "5b1048eb-a2b3-4e1e-91a4-ed0d7d3e6fad",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"error\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "a9a205f3-2d76-496f-b2b5-496512279943",
								"type": "text/javascript"
							}
						}
					],
					"id": "28d395e4-3daa-4b0a-a396-b81991eaa389",
					"name": "trigger camunda1",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"kind\": \"camunda1\"\n}\n"
						},
						"header": [
							{
								"id": "9e0c41e2-f990-4723-b098-6d351b5d3c13",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"test-trigger"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/test-trigger"
						}
					}
				}
			],
			"name": "Sandbox Example: Connectors"
		},
		{
			"event": [
				{
					"id": "6ecb1d9c-e297-4cf8-abf1-2c39b5d33395",
					"listen": "test",
					"script": {
						"exec": [
							"// AUTO-GENERATED. DO NOT MODIFY!",
							"(function() {",
							"    \"use strict\";",
							"    ",
							"    var id = pm.response.headers ? pm.response.headers.get(\"X-Request-ID\") : undefined;",
							"    console.log(\"X-Request-ID: \" + id);",
							"    ",
							"})();",
							""
						],
						"id": "8cc1b2cf-cdec-4168-834d-3095b4e29dba",
						"type": "text/javascript"
					}
				}
			],
			"item": [
				{
					"event": [
						{
							"id": "1780d285-2b0b-46af-90cd-d8ce9798ed72",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"        pm.expect(data).to.have.property(\"claim\");",
									"        pm.expect(data.claim).to.have.property(\"claim_id\");",
									"        pm.environment.set(\"CLAIM_ID\", data.claim.claim_id);",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "86526c7c-b104-4593-96ca-246c9177edfe",
								"type": "text/javascript"
							}
						}
					],
					"id": "ff7e6731-fc8e-47b4-a8c1-f843af73c579",
					"name": "Create claim",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{}\n"
						},
						"header": [
							{
								"id": "f12b01d3-2be0-4499-b820-225c7be10502",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"claims"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/claims"
						}
					}
				},
				{
					"event": [
						{
							"id": "640f3148-9c7e-40ae-a16f-b656508dc64c",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"        pm.expect(data).to.have.property(\"claim\");",
									"        pm.expect(data.claim).to.have.property(\"state\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "67f6fe1e-7a81-4ff0-9411-000bb27f388c",
								"type": "text/javascript"
							}
						}
					],
					"id": "3f88f7e8-e192-4431-9beb-fe545a6ead2d",
					"name": "Get claim",
					"request": {
						"header": [
							{
								"id": "b6d3a0bf-5089-4f4f-bad8-c2b78bb8e6bf",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "GET",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"claim",
								"{{CLAIM_ID}}"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/claim/{{CLAIM_ID}}"
						}
					}
				}
			],
			"name": "Sandbox Example: Claim Management"
		}
	]
}